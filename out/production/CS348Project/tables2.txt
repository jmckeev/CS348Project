CREATE TABLE Student (
    student_id VARCHAR(8) PRIMARY KEY NOT NULL,
    name VARCHAR(30) NOT NULL,
    Email VARCHAR(20),
    GPA NUMERIC(3, 2),
    CHECK (GPA BETWEEN 0 AND 4),
    yearOfUnderGrads NUMERIC(1, 0),
    CHECK (yearOfUnderGrads BETWEEN 0 AND 9),
    yearOfMaster NUMERIC(1, 0),
    CHECK (yearOfMaster BETWEEN 0 AND 9),
    yearOfGraduate NUMERIC(1, 0),
    CHECK (yearOfGraduate BETWEEN 0 AND 9)
);

CREATE TABLE Professor (
    professor_id VARCHAR(8) PRIMARY KEY NOT NULL,
    name VARCHAR(30) NOT NULL,
    Email VARCHAR(20)
);

create table Course (
    major varchar(4) not null,
    id           numeric(5, 0) not null,
    check (id >= 10000),
    academic         numeric(4, 0) not null,
    check (academic between 2000 and 2500),
    semester     varchar(6)    not null,
    check (semester in ('Spring', 'Fall', 'Summer')),
    CRN          numeric(5, 0) not null,
    primary key (academic, semester, CRN)
)charset=UTF8;

create table Takes (
    student_id varchar(8) not null,
    academic numeric(4, 0) not null,
    semester varchar(6) not null,
    CRN numeric(5, 0) not null,
    grade varchar(2),
    check ( grade in ('A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'F', 'S', 'P') ),
    primary key (student_id, academic, semester, CRN),
    foreign key (student_id) references Student (student_id),
    foreign key (academic, semester, CRN) references Course (academic, semester, CRN)
)charset=UTF8;

create table Teaches (
    professor_id varchar(8) not null,
    academic numeric(4, 0) not null,
    semester varchar(6) not null,
    CRN numeric(5, 0) not null,
    primary key (professor_id, academic, semester, CRN),
    foreign key (professor_id) references Professor (professor_id),
    foreign key (academic, semester, CRN) references Course (academic, semester, CRN)
)charset=UTF8;
 
create table TA (
    student_id varchar(8) not null,
    academic numeric(4, 0) not null,
    semester varchar(6) not null,
    CRN numeric(5, 0) not null,
    primary key (student_id, academic, semester, CRN),
    foreign key (student_id) references Student (student_id),
    foreign key (academic, semester, CRN) references Course (academic, semester, CRN)
)charset=UTF8;

CREATE TABLE Due (
    due_id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    year NUMERIC(4, 0) NOT NULL,
    semester VARCHAR(6) NOT NULL,
    CRN NUMERIC(5, 0) NOT NULL,
    description VARCHAR(30),
    weight NUMERIC(4, 2),
    due_date  TIMESTAMP,
    FOREIGN KEY (year, semester, CRN) REFERENCES Course (year, semester, CRN)
)charset=UTF8;

CREATE TABLE Team (
    group_id INT NOT NULL,
    student_id VARCHAR(8) NOT NULL,
    due_id INT,
    PRIMARY KEY (group_id, student_id, due_id),
    FOREIGN KEY (student_id) REFERENCES Student (student_id),
    FOREIGN KEY (due_id) REFERENCES Due (due_id)
)charset=UTF8;

CREATE TABLE Friend (
    main VARCHAR(8) NOT NULL,
    target VARCHAR(8) NOT NULL,
    PRIMARY KEY (main, target),
    FOREIGN KEY (main) REFERENCES Student (student_id),
    FOREIGN KEY (target) REFERENCES Student (student_id)
)charset=UTF8;
